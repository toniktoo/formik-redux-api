{"version":3,"sources":["db/index.js","redux/actions/index.js","redux/reducers/authReducer.js/index.js","redux/reducers/index.js","components/FormField.jsx","api/index.js","components/FormLogin.jsx","components/Home.jsx","components/FormRegistration.jsx","components/PrivateRoute.jsx","components/AuthenticatedRoute.jsx","App.jsx","index.jsx"],"names":["setItemDB","nameItem","valueItem","localStorage","setItem","removeItemDB","removeItem","signupUserRequest","createAction","signupUserSuccess","signupUserFailure","authUserRequest","authUserSuccess","authUserFailure","logout","initState","name","token","undefined","isLoading","isAuth","authReducer","handleActions","state","payload","setFieldError","error","message","alert","responseErrors","response","data","errors","key","toString","rootReducer","combineReducers","FormField","props","className","msg","renderError","URL","fetchOptions","method","headers","json","fetchSignUp","a","axios","JSON","stringify","url","fetchSignIn","schema","yup","shape","email","required","password","FormLogin","withFormik","mapPropsToValues","validationSchema","handleSubmit","signInAuth","displayName","onSubmit","component","placeholder","type","to","connect","username","dispatch","user","onClick","max","matches","FormRegistration","Component","rest","render","useEffect","path","exact","Home","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47d7ba84.chunk.js","sourcesContent":["export const setItemDB = (nameItem, valueItem) => localStorage.setItem(nameItem, valueItem);\nexport const removeItemDB = (nameItem) => localStorage.removeItem(nameItem);\n","import { createAction } from 'redux-actions';\n\nexport const signupUserRequest = createAction('USER_SIGNUP_REQUEST');\nexport const signupUserSuccess = createAction('USER_SIGNUP_SUCCESS');\nexport const signupUserFailure = createAction('USER_SIGNUP_FAILURE');\n\nexport const authUserRequest = createAction('USER_AUTH_REQUEST');\nexport const authUserSuccess = createAction('USER_AUTH_SUCCESS');\nexport const authUserFailure = createAction('USER_AUTH_FAILURE');\n\nexport const logout = createAction('LOG_OUT_PROFILE');\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\nimport { handleActions } from 'redux-actions';\nimport { removeItemDB, setItemDB } from '../../../db';\nimport {\n  authUserRequest,\n  authUserSuccess,\n  authUserFailure,\n  signupUserRequest,\n  signupUserSuccess,\n  signupUserFailure,\n  logout,\n} from '../../actions';\n\nconst initState = {\n  name: '',\n  token: undefined,\n  isLoading: false,\n  isAuth: false,\n};\n\nconst authReducer = handleActions(\n  {\n    [signupUserRequest]: (state, { payload: { isLoading } }) => ({\n      ...state,\n      isLoading,\n    }),\n    [signupUserSuccess]: (\n      state,\n      {\n        payload: {\n          isAuth, token, name, isLoading,\n        },\n      },\n    ) => {\n      setItemDB('token', token);\n      setItemDB('name', name);\n      return {\n        ...state,\n        isAuth,\n        token,\n        name,\n        isLoading,\n      };\n    },\n    [signupUserFailure]: (\n      state,\n      {\n        payload: {\n          isAuth, isLoading, setFieldError, error,\n        },\n      },\n    ) => {\n      if (error.message === 'Network Error') {\n        alert(error.message);\n      }\n      const responseErrors = error.response.data.errors;\n      for (const key in responseErrors) {\n        setFieldError(key.toString(), responseErrors[key][0]);\n      }\n      return {\n        ...state,\n        isAuth,\n        isLoading,\n      };\n    },\n    [authUserRequest]: (state, { payload: { isLoading } }) => ({\n      ...state,\n      isLoading,\n    }),\n    [authUserSuccess]: (\n      state,\n      {\n        payload: {\n          isAuth, token, name, isLoading,\n        },\n      },\n    ) => {\n      setItemDB('token', token);\n      setItemDB('name', name);\n      return {\n        ...state,\n        isAuth,\n        token,\n        name,\n        isLoading,\n      };\n    },\n    [authUserFailure]: (\n      state,\n      {\n        payload: {\n          isAuth, isLoading, setFieldError, error,\n        },\n      },\n    ) => {\n      if (error.message === 'Network Error') {\n        alert(error.message);\n      }\n      const responseErrors = error.response.data.errors;\n      if (responseErrors['email or password']) {\n        setFieldError('email', 'email or password is invalid');\n        setFieldError('password', 'email or password is invalid');\n      }\n      return {\n        ...state,\n        isAuth,\n        isLoading,\n      };\n    },\n    [logout]: (state, { payload: { isAuth, token, name } }) => {\n      removeItemDB('token');\n      removeItemDB('name');\n      return {\n        ...state,\n        name,\n        isAuth,\n        token,\n      };\n    },\n  },\n  initState,\n);\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer.js';\n\nconst rootReducer = combineReducers({\n  authReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Input } from 'formik-antd';\n\nconst renderError = (msg) => <span className=\"errorMsg\">{msg}</span>;\n\nconst FormField = ({ name, ...props }) => (\n  <div className=\"formFieldWrap\">\n    <Input name={name} {...props} className=\"formField\" />\n    <ErrorMessage name={name} className=\"formFieldError\">\n      {(msg) => renderError(msg)}\n    </ErrorMessage>\n  </div>\n);\n\nexport default FormField;\n","import axios from 'axios';\n\nconst URL = 'https://conduit.productionready.io/api/users';\n\nconst fetchOptions = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json;charset=utf-8',\n  },\n  json: true,\n};\n\nexport const fetchSignUp = async (data) => {\n  const response = await axios({\n    ...fetchOptions,\n    data: JSON.stringify(data),\n    url: URL,\n  });\n  return response;\n};\n\nexport const fetchSignIn = async (data) => {\n  const response = await axios({\n    ...fetchOptions,\n    data: JSON.stringify(data),\n    url: `${URL}/login`,\n  });\n  return response;\n};\n","import React from 'react';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport FormField from './FormField';\nimport { fetchSignIn } from '../api';\nimport {\n  authUserRequest,\n  authUserSuccess,\n  authUserFailure,\n} from '../redux/actions';\n\nconst signInAuth = ({\n  username, email, password, setFieldError,\n}) => async (\n  dispatch,\n) => {\n  dispatch(authUserRequest({ isLoading: true }));\n  try {\n    const data = {\n      user: { email, password, username },\n    };\n    const response = await fetchSignIn(data);\n    const token = await response.data.user.token;\n    const name = await response.data.user.username;\n    await dispatch(\n      authUserSuccess({\n        isAuth: true,\n        token,\n        name,\n        isLoading: false,\n      }),\n    );\n  } catch (error) {\n    dispatch(\n      authUserFailure({\n        isAuth: false,\n        isLoading: false,\n        error,\n        setFieldError,\n      }),\n    );\n  }\n};\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Not correct email').required('Enter email'),\n  password: yup.string().required('Enter password'),\n});\n\nconst renderForm = ({ isLoading, handleSubmit }) => (isLoading ? (\n  'Loading...'\n) : (\n  <form onSubmit={handleSubmit} className=\"form\">\n    <div>\n      <h2 className=\"title\">Login</h2>\n      <hr className=\"lineTitle\" />\n      <FormField\n        name=\"email\"\n        component=\"input\"\n        placeholder=\"enter email...\"\n      />\n      <FormField\n        name=\"password\"\n        type=\"password\"\n        component=\"input\"\n        placeholder=\"enter password...\"\n      />\n    </div>\n    <button type=\"submit\">Login</button>\n    <Link to=\"/sign\" className=\"link\">\n      Registration\n    </Link>\n  </form>\n));\n\nconst FormLogin = withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n    password: '',\n  }),\n  validationSchema: () => schema,\n  handleSubmit: ({ email, password }, { props, setFieldError }) => {\n    props.signInAuth({\n      email,\n      password,\n      setFieldError,\n    });\n  },\n  displayName: 'signInAuth',\n})(renderForm);\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.authReducer.isLoading,\n});\n\nexport default connect(mapStateToProps, { signInAuth })(FormLogin);\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../redux/actions';\n\nconst Home = ({ isLoading, dispatch, name }) => {\n  const handleLogout = () => {\n    dispatch(logout({ isAuth: false, token: undefined, name: '' }));\n  };\n  return isLoading ? (\n    'Loading...'\n  ) : (\n    <div>\n      <h2>\n        Ваше имя:\n        {name}\n      </h2>\n      <button onClick={handleLogout}>Logout</button>\n    </div>\n  );\n};\n\nexport default connect((state) => ({\n  name: state.authReducer.name,\n  isLoading: state.authReducer.isLoading,\n}))(Home);\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\nimport React from 'react';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport FormField from './FormField';\nimport { fetchSignUp } from '../api';\nimport {\n  signupUserRequest,\n  signupUserSuccess,\n  signupUserFailure,\n} from '../redux/actions';\n\nexport const signInAuth = ({\n  username,\n  email,\n  password,\n  setFieldError,\n}) => async (dispatch) => {\n  dispatch(signupUserRequest({ isLoading: true }));\n  try {\n    const data = {\n      user: { email, password, username },\n    };\n    const response = await fetchSignUp(data);\n    const token = await response.data.user.token;\n    const name = await response.data.user.username;\n    await dispatch(\n      signupUserSuccess({\n        isAuth: true,\n        token,\n        name,\n        isLoading: false,\n      }),\n    );\n  } catch (error) {\n    dispatch(\n      signupUserFailure({\n        isAuth: false,\n        isLoading: false,\n        error,\n        setFieldError,\n      }),\n    );\n  }\n};\n\nconst schema = yup.object().shape({\n  username: yup\n    .string()\n    .max(50, 'no more than 50 characters')\n    .required('Заполните имя'),\n  email: yup.string().email('Not correct email').required('Enter email'),\n  password: yup\n    .string()\n    .required('Enter password')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      'Password between 8 and 40 characters, at least one number and one capital letter',\n    ),\n});\n\nconst renderForm = ({ isLoading, handleSubmit }) => (isLoading ? (\n  'Loading...'\n) : (\n  <form onSubmit={handleSubmit} className=\"form\">\n    <div>\n      <h2 className=\"title\">Registration</h2>\n      <hr className=\"lineTitle\" />\n      <FormField\n        name=\"username\"\n        component=\"input\"\n        placeholder=\"enter username...\"\n      />\n      <FormField\n        name=\"email\"\n        component=\"input\"\n        placeholder=\"enter email...\"\n      />\n      <FormField\n        name=\"password\"\n        type=\"password\"\n        component=\"input\"\n        placeholder=\"enter password...\"\n      />\n    </div>\n    <button type=\"submit\">Registration</button>\n    <Link to=\"/login\" className=\"link\">\n      Login\n    </Link>\n  </form>\n));\n\nconst FormRegistration = withFormik({\n  mapPropsToValues: () => ({\n    username: '',\n    email: '',\n    password: '',\n  }),\n  validationSchema: () => schema,\n  handleSubmit: ({ username, email, password }, { props, setFieldError }) => {\n    props.signInAuth({\n      username,\n      email,\n      password,\n      setFieldError,\n    });\n  },\n  displayName: 'FormRegistration',\n})(renderForm);\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.authReducer.isLoading,\n});\n\nexport default connect(mapStateToProps, { signInAuth })(FormRegistration);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuth,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) => (isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />)}\n  />\n);\n\nexport default connect((state) => ({\n  isAuth: state.authReducer.isAuth,\n}))(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst AuthenticatedRoute = ({\n  component: Component,\n  isAuth,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) => (isAuth ? <Redirect to=\"/\" /> : <Component {...props} />)}\n  />\n);\n\nexport default connect((state) => ({\n  isAuth: state.authReducer.isAuth,\n}))(AuthenticatedRoute);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Redirect } from 'react-router-dom';\nimport FormLogin from './components/FormLogin';\nimport Home from './components/Home';\nimport FormRegistration from './components/FormRegistration';\nimport PrivateRoute from './components/PrivateRoute';\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport { authUserSuccess } from './redux/actions';\n\nconst App = ({ dispatch }) => {\n  useEffect(() => {\n    if (localStorage.token !== undefined) {\n      dispatch(\n        authUserSuccess({\n          isAuth: true,\n          token: localStorage.token,\n          name: localStorage.name,\n        }),\n      );\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <AuthenticatedRoute path=\"/login\" component={FormLogin} />\n        <AuthenticatedRoute path=\"/sign\" component={FormRegistration} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default connect((state) => ({\n  isAuth: state.authReducer.isAuth,\n  token: state.authReducer.token,\n}))(App);\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './style.css';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './redux/reducers';\nimport App from './App';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}